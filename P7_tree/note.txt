

Code03: 怎么求一颗二叉树宽度（宽度优先遍历）
解法：使用队列，头进尾出。 将头节点入队列，每次弹出打印，先放左孩子，再放右孩子，重复上述操作

判断一颗数是否是搜索二叉树 BST（）（左树节点都比根小，右树节点都比根大）
解法：中序遍历一棵树，如果结果为升序，就是搜索二叉树

平衡二叉树：左树高度和右树高度差不超过1。 左树平衡，右树平衡， |左高-右高| <= 1.
需要信息：树是否平衡，树的高度


套路(动态规划，树形DP): 向左树要信息，向右树要信息
搜索二叉树：左子树是搜索二叉树，右子树是搜索二叉树，左子树最大值小于自身，自身小于右子树最小值
信息：左：是否搜索二叉树，最大值  右：是否搜索二叉树，最小值。 所以返回三个信息： 是否为搜索二叉树，最大值，最小值


平衡二叉树：向左子树要高度和左子树是否平衡，向右树要高度和是否平衡， 生成自己高度，判断自己是否平衡


